var m=(r,n,o)=>new Promise((s,p)=>{var d=a=>{try{t(o.next(a))}catch(e){p(e)}},c=a=>{try{t(o.throw(a))}catch(e){p(e)}},t=a=>a.done?s(a.value):Promise.resolve(a.value).then(d,c);t((o=o.apply(r,n)).next())});import{B as h}from"./index.9788db2e.js";import{a as y,a6 as i,z as T,B as _,f as k,bg as v,j as l,an as B,o as w,k as E,G as M,p as F,ad as g}from"./index.9eb451d3.js";import{U as u,_ as R}from"./JUpload.38683df0.js";const U=y({__name:"JUploadModal",props:{value:i.oneOfType([i.string,i.array]),width:i.number.def(520)},emits:["change","update:value","register"],setup(r,{emit:n}){const o=T(),s=_({props:{}}),p=k(()=>{var e;return((e=s.props)==null?void 0:e.fileType)===u.image?"\u56FE\u7247\u4E0A\u4F20":"\u6587\u4EF6\u4E0A\u4F20"}),[d,{closeModal:c}]=v(e=>m(this,null,function*(){var f;s.props=l(e)||{},[u.image,"img","picture"].includes((f=s.props)==null?void 0:f.fileType)?s.props.fileType=u.image:s.props.fileType=u.file,B(()=>o.value.addActionsListener())}));function t(){c()}function a(e){n("change",e),n("update:value",e)}return(e,f)=>(w(),E(l(h),g({onRegister:l(d),title:l(p),width:r.width,onOk:t},e.$attrs),{default:M(()=>[F(R,g({ref_key:"uploadRef",ref:o,value:r.value},s.props,{onChange:a}),null,16,["value"])]),_:1},16,["onRegister","title","width"]))}});export{U as _};
